// Generated by CoffeeScript 1.3.3
(function() {
  var inspect;

  inspect = require('eyes').inspector();

  exports.checkDomain = function(swf, domainName, force, callBack) {
    var request, swfParams,
      _this = this;
    if (force == null) {
      force = false;
    }
    swfParams = {
      name: domainName
    };
    request = swf.describeDomain(swfParams);
    request.done(function(response) {
      return callBack(null, response.data.domainInfo.name);
    });
    return request.fail(function(response) {
      var regRequest;
      if (response.error.code === "UnknownResourceFault") {
        if (!force) {
          return callBack({
            err: "NO_DOMAIN",
            message: "Domain " + domainName + " doesnt exist. Please use the --force option to create it."
          });
        } else {
          regRequest = swf.registerDomain({
            name: domainName,
            workflowExecutionRetentionPeriodInDays: '1'
          });
          regRequest.done(function(resp) {
            return callBack(null, domainName);
          });
          return regRequest.fail(function(resp) {
            return callBack({
              err: resp.error.code,
              message: resp.error.message
            });
          });
        }
      } else {
        return callBack({
          err: response.error.code,
          message: response.error.message
        });
      }
    });
  };

  exports.checkWorkflow = function(swf, domainName, workflowName, taskList, force, callBack) {
    var request, swfParams,
      _this = this;
    if (force == null) {
      force = false;
    }
    swfParams = {
      domain: domainName,
      workflowType: {
        name: workflowName,
        version: "1.0"
      }
    };
    request = swf.describeWorkflowType(swfParams);
    request.done(function(response) {
      return callBack(null, workflowName);
    });
    return request.fail(function(response) {
      var regRequest;
      if (response.error.code === "UnknownResourceFault") {
        if (!force) {
          return callBack({
            err: response.error.code,
            message: "Workflow " + domainName + "/" + workflowName + " doesnt exist. Please use the force option to create it."
          });
        } else {
          swfParams = {
            "domain": domainName,
            "name": workflowName,
            "version": "1.0",
            "description": "Automatically created workflow type.",
            "defaultTaskStartToCloseTimeout": "600",
            "defaultExecutionStartToCloseTimeout": "3600",
            "defaultTaskList": {
              "name": "" + taskList
            },
            "defaultChildPolicy": "TERMINATE"
          };
          regRequest = swf.registerWorkflowType(swfParams);
          regRequest.done(function(resp) {
            return callBack(null, domainName);
          });
          return regRequest.fail(function(resp) {
            return callBack({
              err: resp.error.code,
              message: resp.error.message
            });
          });
        }
      } else {
        return callBack({
          err: response.error.code,
          message: response.error.message
        });
      }
    });
  };

  exports.checkActivity = function(swf, domainName, activityName, taskList, force, callBack) {
    var request, swfParams,
      _this = this;
    if (force == null) {
      force = false;
    }
    swfParams = {
      domain: domainName,
      activityType: {
        name: activityName,
        version: "1.0"
      }
    };
    request = swf.describeActivityType(swfParams);
    request.done(function(response) {
      return callBack(null, activityName);
    });
    return request.fail(function(response) {
      var regRequest;
      if (response.error.code === "UnknownResourceFault") {
        if (!force) {
          return callBack({
            err: response.error.code,
            message: "Activity " + domainName + "/" + activityName + " doesnt exist. Please use the force option to create it."
          });
        } else {
          swfParams = {
            "domain": domainName,
            "name": activityName,
            "version": "1.0",
            "description": "Automatically created activity type",
            "defaultTaskStartToCloseTimeout": "600",
            "defaultTaskHeartbeatTimeout": "120",
            "defaultTaskList": {
              "name": taskList
            },
            "defaultTaskScheduleToStartTimeout": "300",
            "defaultTaskScheduleToCloseTimeout": "900"
          };
          regRequest = swf.registerActivityType(swfParams);
          regRequest.done(function(resp) {
            return callBack(null, activityName);
          });
          return regRequest.fail(function(resp) {
            return callBack({
              err: resp.error.code,
              message: resp.error.message
            });
          });
        }
      } else {
        return callBack({
          err: response.error.code,
          message: response.error.message
        });
      }
    });
  };

}).call(this);
