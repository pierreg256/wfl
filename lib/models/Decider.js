// Generated by CoffeeScript 1.3.3
(function() {
  var Decider, DecisionTask, Swf, amazon, awssum, inspect;

  inspect = require('eyes').inspector();

  awssum = require('awssum');

  amazon = awssum.load('amazon/amazon');

  Swf = awssum.load('amazon/swf').Swf;

  DecisionTask = require('./DecisionTask').DecisionTask;

  Decider = (function() {

    function Decider(config, deciderFn) {
      var swfCfg,
        _this = this;
      this.config = config;
      this.deciderFn = deciderFn;
      swfCfg = {
        'accessKeyId': this.config.accessKeyId,
        'secretAccessKey': this.config.secretAccessKey,
        'region': this.config.region
      };
      this.swf = new Swf(swfCfg);
      process.nextTick(function() {
        return _this.poll();
      });
    }

    Decider.prototype.poll = function() {
      var swfCfg,
        _this = this;
      console.log("Polling for next decision task (tasklist: " + this.config.taskList.name + ")");
      swfCfg = {
        'Domain': this.config.domain,
        'TaskList': this.config.taskList
      };
      return this.swf.PollForDecisionTask(swfCfg, function(err, data) {
        var body, task, token;
        if (err != null) {
          process.nextTick(function() {
            return _this.deciderFn(err, null);
          });
        } else {
          body = data.Body;
          token = body.taskToken;
          if (token != null) {
            console.log("New decision task received");
            task = new DecisionTask(_this.swf, body);
            process.nextTick(function() {
              return _this.deciderFn(null, task);
            });
          }
        }
        return process.nextTick(function() {
          return _this.poll();
        });
      });
    };

    return Decider;

  })();

  exports.Decider = Decider;

}).call(this);
