// Generated by CoffeeScript 1.3.3
(function() {
  var Activity, DecisionTask, Swf, amazon, awssum, inspect;

  inspect = require('eyes').inspector();

  awssum = require('awssum');

  amazon = awssum.load('amazon/amazon');

  Swf = awssum.load('amazon/swf').Swf;

  DecisionTask = require('./ActivityTask').DecisionTask;

  Activity = (function() {

    function Activity(config, workerFn) {
      var swfCfg;
      this.config = config;
      this.workerFn = workerFn;
      swfCfg = {
        'accessKeyId': this.config.accessKeyId,
        'secretAccessKey': this.config.secretAccessKey,
        'region': this.config.region
      };
      this.swf = new Swf(swfCfg);
      process.nextTick(function() {
        return this.poll();
      });
    }

    Activity.prototype.poll = function() {
      var swfCfg;
      console.log("Polling for next activity task...");
      swfCfg = {
        'Domain': this.config.domain,
        'TaskList': this.config.taskList
      };
      return this.swf.PollForActivityTask(swfCfg, function(err, data) {
        var body, task, token;
        if (err != null) {
          return process.nextTick(function() {
            return this.workerFn(err, null);
          });
        } else {
          body = data.Body;
          token = data.taskToken;
          if (!(typeof taskToken !== "undefined" && taskToken !== null)) {
            console.log("No activity task in the pipe, repolling...");
            return process.nextTick(function() {
              return this.poll();
            });
          } else {
            console.log("New task received");
            task = new ActivityTask(this.swf, body);
            return process.nextTick(function() {
              return this.workerFn(null, task);
            });
          }
        }
      });
    };

    return Activity;

  })();

  exports.Activity = Activity;

}).call(this);
